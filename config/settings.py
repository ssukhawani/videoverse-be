"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from pathlib import Path
from datetime import timedelta


from dotenv import load_dotenv
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure--xryukgph8is5ad+0=a^)_25d0+vgz%**thl5y&(t#(r(o*3j@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

INTERNAL_IPS = ['127.0.0.1']

# ALLOWED_HOSTS = ['localhost', '127.0.0.1', "adjusted-glowworm-cheerful.ngrok-free.app"]

# CORS_ALLOWED_ORIGINS = ['http://localhost:3000', 'http://127.0.0.1:3000', "https://adjusted-glowworm-cheerful.ngrok-free.app"]

ALLOWED_HOSTS = ['15.206.80.18','backend.bytegenie.tech','www.backend.bytegenie.tech', 'bytegenie.tech', 'www.bytegenie.tech', ]

CORS_ALLOWED_ORIGINS = [
     'http://15.206.80.18', 'https://backend.bytegenie.tech', 'https://bytegenie.tech', 'https://www.bytegenie.tech', 'https://www.backend.bytegenie.tech'
]


# Application definition

DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_filters', 
]

THIRD_PARTY_APPS = [
    'corsheaders',
    'rest_framework',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
    'djoser',
    'debug_toolbar',
]

CUSTOM_APPS = [
    'accounts',
    'videoverse'
]  

AUTH_USER_MODEL = 'accounts.CustomUser'

INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + CUSTOM_APPS

MIDDLEWARE = [
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['config/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
print(os.environ.get('ENVIRONMENT'))
print(os.environ.get("DB_NAME"))
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME':os.environ.get("DB_NAME"),
        'HOST':os.environ.get("DB_HOST"),
        'USER':os.environ.get("DB_USER"),
        'PASSWORD':os.environ.get("DB_PASSWORD"),
    }
}


REST_FRAMEWORK = {
    'COERCE_DECIMAL_TO_STRING': False,
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    # 'DEFAULT_RENDERER_CLASSES': (
    #     'rest_framework.renderers.JSONRenderer',
    # ),
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = False

APPEND_SLASH=False

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')
EMAIL_USE_TLS = True

CUSTOM_DOMAIN = os.environ.get('CUSTOM_DOMAIN')
SITE_NAME = os.environ.get('SITE_NAME')


DJOSER = {
    'LOGIN_FIELD':'email',
    'PASSWORD_RESET_CONFIRM_URL':True,
    'SET_PASSWORD_RETYPE':True,
    'PASSWORD_CHANGED_EMAIL_CONFIRMATION':True,
    'PASSWORD_RESET_CONFIRM_URL':'password-reset/{uid}/{token}',
    'ACTIVATION_URL':'activate/{uid}/{token}',
    'SEND_CONFIRMATION_EMAIL':True,
    'SEND_ACTIVATION_EMAIL':True,
    'PASSWORD_RESET_CONFIRM_RETYPE':True,
    'PASSWORD_RESET_SHOW_EMAIL_NOT_FOUND':True,
    'SERIALIZERS': {
        'activation': 'accounts.serializers.CustomActivationSerializer',
        'user_create': 'accounts.serializers.CustomUserCrateSerializer',
        'current_user':'accounts.serializers.CustomUserSerializer',
    },
    'EMAIL': {
        'activation': 'config.email.AwesomeActivationEmail',
        'confirmation':'config.email.ActivateConfirmation',
        'password_reset':'config.email.PasswordResetEmail',
        'password_changed_confirmation':'config.email.PasswordChangedConfirmationEmail'
    },
    'PERMISSIONS':{
        'user_list': ['rest_framework.permissions.IsAdminUser'],
        'user_delete': ['rest_framework.permissions.IsAdminUser'],
        'username_reset': ['rest_framework.permissions.IsAdminUser'],
        'username_reset_confirm': ['rest_framework.permissions.IsAdminUser'],
    },
    'SITE_NAME': SITE_NAME,
    'CUSTOM_DOMAIN': CUSTOM_DOMAIN,
    'TOKEN_MODEL':None
}



SIMPLE_JWT = {
    'AUTH_HEADER_TYPES': ('API-Key',),
    'ACCESS_TOKEN_LIFETIME': timedelta(days=5),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7)
}

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/


STATIC_URL = 'static/'
# Base URL to serve media files.
MEDIA_URL = 'media/'

STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# Directory that will hold media.
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
